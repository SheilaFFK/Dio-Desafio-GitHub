Link para download do Git: https://git-scm.com/downloads

O git Bash é um terminal extendido para otimizar o uso do Git.

O Git **é um repositório de controle de versão de arquivos, utilizado para controlar versões de códigos-fonte e desenvolvimento colaborativo**.

Link ùtil      [Comandos do Git](https://www.freecodecamp.org/portuguese/news/10-comandos-do-git-que-todo-desenvolvedor-deveria-conhecer/)

**Exemplos abaixo:**

## ***Git clone***

Git clone é uma comando para baixar o código-fonte existente de um repositório remoto (como, por exemplo, o Github). Em outras palavras, git clone, basicamente, faz uma cópia idêntica da versão mais recente de um projeto em um repositório e a salva em seu computador.

## ***Git status***

O comando git status nos dá todas as informações necessárias

## ***Git add***

Ao criarmos, modificarmos ou excluirmos um arquivo, essas alterações acontecerão em nosso espaço de trabalho local e não serão incluídas no próximo commit (a menos que alteremos as configurações).

Precisamos usar o comando git add para incluir as alterações de um ou vários arquivos em nosso próximo commit.

**Para adicionar um único arquivo\**:\****

```
git add <arquivo>

```

## **Git commit**

Talvez esse seja o comando mais usado do Git. Quando chegamos a determinado ponto em desenvolvimento, queremos salvar nossas alterações (talvez após uma tarefa ou resolução de problema específica).

Git commit é como definir um ponto de verificação no processo de desenvolvimento. Você pode voltar a esse ponto mais tarde, se necessário.

Também precisamos escrever uma mensagem breve para explicar o que desenvolvemos ou alteramos no código-fonte.

```
git commit -m "mensagem do commit"
```

Importante: git commit salva suas alterações  no espaço de trabalho local.

## **Git push**

Após fazer o commit de suas alterações, a próxima coisa a fazer é enviar suas alterações ao servidor remoto. Git push faz o upload dos seus commits no repositório remoto.

```
git push <repositório-remoto> <nome-da-branch>
```

Entretanto, se a sua branch foi recém-criada, também é preciso fazer o upload da branch com o seguinte comando:

```
git push --set-upstream <repositório-remoto> <nome-da-branch>
```

